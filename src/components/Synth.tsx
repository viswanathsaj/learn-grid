import type { NextComponentType } from 'next'
import Head from 'next/head'
import { listen, sleep, getInfo, noteMode, playNote, noteConfig } from '@utils/midi'
import {
  DropdownMenu,
  DropdownMenuContent,
  DropdownMenuItem,
  DropdownMenuLabel,
  DropdownMenuSeparator,
  DropdownMenuTrigger
} from '@components/ui/DropdownMenu'
import { Scale, Key, Note } from 'tonal'

const controller = {
  overlaps: [1, 2, 3, 4, 5],
  scales: [
    'major',
    'minor',
    'dorian',
    'phrygian',
    'mixolydian',
    'melodic Minor',
    'harmonic Minor',
    'beBop',
    'blues Scale',
    'minor Pentatonic',
    'hungarian Minor',
    'ukranian Dorian Mode',
    'marva',
    'todi',
    'whole Tone Scale',
    'hirajoshi'
  ],
  roots: ['C', 'Db', 'D', 'Eb', 'E', 'F', 'Gb', 'G', 'Ab', 'A', 'Bb', 'B']
}

function getPadMeta(root: string, scale: string) {
  const sortedNotes = (root: string) => {
    const arr1 = controller.roots.slice(0, controller.roots.indexOf(root))
    const arr2 = controller.roots.slice(controller.roots.indexOf(root)).concat(arr1)
    console.log(arr2)
    return arr2
  }

  const makeRepeated = (arr: string[], repeats: number) => Array.from({ length: repeats }, () => arr).flat()

  const padNotes = makeRepeated(sortedNotes(root), 5).concat(sortedNotes(root).slice(0, 4))

  const pads: object[] = []

  console.log(padNotes)

  padNotes.map((note) => {
    const pad = {
      note: note,
      highlighted: Scale.get(`${root} ${scale}`).notes.includes(note)
    }
    pads.push(pad)
  })

  const padsOverlapped: object[] = []

  let pad = 0

  while (padsOverlapped.length < 70) {
    for (let i = 0; i < 8; i++) {
      padsOverlapped.push(pads[pad]!)
      pad++
    }
    padsOverlapped.slice(-3).map((e) => {
      padsOverlapped.push(e)
    })
  }
  console.log(padsOverlapped)
  return padsOverlapped
}

const Synth: NextComponentType = () => {
  return (
    <>
      <Head>
        <title>Learn Grid</title>
        <meta name='description' content='Generated by create-t3-app' />
        <link rel='icon' href='/favicon.ico' />
      </Head>
      <main className='flex min-h-screen flex-col items-center justify-center'>
        <div className='container flex flex-col items-center justify-center gap-12 px-4 py-16 '>
          <button onClick={() => sleep()}>Sleep</button>
          <button onClick={() => listen()}>Listen</button>
          <button onClick={() => getInfo()}>Info</button>
          <button onClick={() => noteMode()}>Note Mode</button>
          <button onClick={() => playNote('C4')}>Play Note</button>
          <button onClick={() => noteConfig()}>Get Note Mode Config</button>
          <button onClick={() => getPadMeta('F', 'major')}>Execute</button>
        </div>

        <div className='grid grid-cols-8 gap-4'></div>
      </main>
    </>
  )
}

export default Synth
